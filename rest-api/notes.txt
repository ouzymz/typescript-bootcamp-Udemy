Project Start steps:

--> npm init : (to create package.json)
--> npm install --save-dev typescript 
--> tsc --init : (to create default tsconfig.json)
-->package.json duzenlenmasi
    "scripts": {
    "build": "tsc",
    "start-server": " node dist/server.js" },
--> npm install --save-dev @types/express : 
--> root ve server ts hazirlanir.
--> npm install --save-def rimraf : ( to completely clean the dist folder at the beginning of our build process. )
--> npm i --save-dev npm-run-all : ()
--> npm install --save-dev tsc-watch
--> npm intall dotenv --save 
--> gitignore klasorunde .env dahil etmeyi unutma.
--> npm install --save winston : (to create logging system)


--> psql (URI from cloud like heroku)


NOTLAR: 

package.json icine yazilan scriptler "node 'value-script-adi'" komutunu terminalda kullanmamiza yarar. npm run 'key-script-adi' komutu ile terminal uzerinde kullanilabilir.

psql commands:

\dt  == database table'lerini getirir.
\q   == kapatmak icin kullanilir.
\Ds "TABLE_NAME"  == table'in kolon ozelliklerini geitrir.



TypeORM Datamapper pattern: 

--> npm install typeorm --save
--> npm install pg -save : to instal postgre
--> add database credential into .env file from cloud host. 
--> npm install --save reflect-metadata :: 



CORS: 

--> npm install --save cors


--> npm install --save body-parser :: to be able to use .body


CURL COMMANDS: 
//to use patch REST request with Curl
--> curl -X PATCH http://localhost:9033/api/courses/76 -H "Content-Type:application/json" -d '{"title":"Typescript-Bootcamp(UPDATED)"}'